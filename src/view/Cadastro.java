package view;

import com.sun.jdi.connect.spi.Connection;
import java.awt.List;
import java.util.Arrays;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import DAO.DadosDAO;
import bancoDados.Conexao;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import bancoDados.Conexao;
import java.text.SimpleDateFormat;
import java.util.Date;
import sistemafinancas.Dados;
import java.text.ParseException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

/**
 *
 * @author paloma
 */
public class Cadastro extends javax.swing.JFrame {

    /**
     * Creates new form Cadastro
     */
    public Cadastro() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblNome = new javax.swing.JLabel();
        lblValor = new javax.swing.JLabel();
        lblClassificacao = new javax.swing.JLabel();
        lblDataEntrada = new javax.swing.JLabel();
        btnCadastro = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnApagar = new javax.swing.JButton();
        lblGanho = new javax.swing.JLabel();
        tfNome = new javax.swing.JTextField();
        tfClassificacao = new javax.swing.JTextField();
        tfValor = new javax.swing.JTextField();
        tfData = new javax.swing.JTextField();
        btnGastos = new javax.swing.JButton();
        tfDataCadastro = new javax.swing.JTextField();
        lblData1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        btnGanho1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbprodutos = new javax.swing.JTable();
        btnTipos = new javax.swing.JButton();
        lblSaldo = new javax.swing.JLabel();
        btnSaldo = new javax.swing.JButton();
        lblRecebidos = new javax.swing.JLabel();
        btnDespesas = new javax.swing.JButton();
        lblDespesas = new javax.swing.JLabel();
        btnRecebidos = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Controle Financeiro");
        setBackground(new java.awt.Color(102, 102, 102));

        jPanel1.setBackground(new java.awt.Color(57, 158, 158));

        lblNome.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblNome.setText("Nome:");

        lblValor.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblValor.setText("Valor:");

        lblClassificacao.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblClassificacao.setText("Classificação:");

        lblDataEntrada.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblDataEntrada.setText("Data Entrada:");

        btnCadastro.setBackground(new java.awt.Color(217, 232, 255));
        btnCadastro.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnCadastro.setText("Cadastrar");
        btnCadastro.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCadastro.setBorderPainted(false);
        btnCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastroActionPerformed(evt);
            }
        });

        btnAtualizar.setBackground(new java.awt.Color(217, 232, 255));
        btnAtualizar.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnAtualizar.setForeground(new java.awt.Color(0, 51, 153));
        btnAtualizar.setText("Atualizar");
        btnAtualizar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAtualizar.setBorderPainted(false);
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnApagar.setBackground(new java.awt.Color(217, 232, 255));
        btnApagar.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnApagar.setText("Apagar");
        btnApagar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnApagar.setBorderPainted(false);
        btnApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarActionPerformed(evt);
            }
        });

        lblGanho.setBackground(new java.awt.Color(0, 204, 153));

        tfNome.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tfNome.setText("Recebimento");
        tfNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNomeActionPerformed(evt);
            }
        });

        tfClassificacao.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tfClassificacao.setText("Salário");
        tfClassificacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfClassificacaoActionPerformed(evt);
            }
        });

        tfValor.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tfValor.setText("1500");
        tfValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfValorActionPerformed(evt);
            }
        });

        tfData.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tfData.setText("15-10-2024");

        btnGastos.setBackground(new java.awt.Color(204, 51, 0));
        btnGastos.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnGastos.setForeground(new java.awt.Color(255, 255, 255));
        btnGastos.setText("Gastos(-)");
        btnGastos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGastos.setBorderPainted(false);

        tfDataCadastro.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tfDataCadastro.setText("15-10-2024");
        tfDataCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfDataCadastroActionPerformed(evt);
            }
        });

        lblData1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblData1.setText("Cadastro:");

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Sistema de Controle Financeiro ");

        btnSalvar.setBackground(new java.awt.Color(217, 232, 255));
        btnSalvar.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnSalvar.setForeground(new java.awt.Color(0, 51, 153));
        btnSalvar.setText("Salvar");
        btnSalvar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSalvar.setBorderPainted(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnGanho1.setBackground(new java.awt.Color(51, 153, 0));
        btnGanho1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnGanho1.setForeground(new java.awt.Color(255, 255, 255));
        btnGanho1.setText("Ganho(+)");
        btnGanho1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGanho1.setBorderPainted(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblValor)
                                .addGap(18, 18, 18)
                                .addComponent(tfValor, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblClassificacao)
                                .addGap(18, 18, 18)
                                .addComponent(tfClassificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblNome, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfNome)))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(btnCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(153, 153, 153)
                                .addComponent(jLabel1))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblGanho)
                        .addGap(566, 566, 566)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btnGanho1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGastos, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(lblData1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(tfDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(lblDataEntrada)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(tfData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblGanho)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblData1)
                                    .addComponent(tfDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblDataEntrada)
                                    .addComponent(tfData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblNome)
                                    .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblClassificacao)
                                    .addComponent(tfClassificacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnGastos, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnGanho1))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblValor)
                                .addComponent(tfValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41))))
        );

        tbprodutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Classificação", "Valor", "Data", "Cadastro"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbprodutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbprodutosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbprodutos);

        btnTipos.setBackground(new java.awt.Color(217, 232, 255));
        btnTipos.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnTipos.setForeground(new java.awt.Color(0, 51, 153));
        btnTipos.setText("Tipos de Classificação:");
        btnTipos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnTipos.setBorderPainted(false);
        btnTipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTiposActionPerformed(evt);
            }
        });

        lblSaldo.setText("R$");

        btnSaldo.setBackground(new java.awt.Color(217, 232, 255));
        btnSaldo.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnSaldo.setForeground(new java.awt.Color(0, 51, 153));
        btnSaldo.setText("Saldo disponível");
        btnSaldo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSaldo.setBorderPainted(false);
        btnSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaldoActionPerformed(evt);
            }
        });

        lblRecebidos.setText("R$");

        btnDespesas.setBackground(new java.awt.Color(217, 232, 255));
        btnDespesas.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnDespesas.setForeground(new java.awt.Color(0, 51, 153));
        btnDespesas.setText("Total de Despesas");
        btnDespesas.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDespesas.setBorderPainted(false);
        btnDespesas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDespesasActionPerformed(evt);
            }
        });

        lblDespesas.setText("R$");

        btnRecebidos.setBackground(new java.awt.Color(217, 232, 255));
        btnRecebidos.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        btnRecebidos.setForeground(new java.awt.Color(0, 51, 153));
        btnRecebidos.setText("Valores recebidos:");
        btnRecebidos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRecebidos.setBorderPainted(false);
        btnRecebidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecebidosActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(217, 232, 255));

        jLabel2.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 153));
        jLabel2.setText("Recebidos:");

        jLabel3.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 153));
        jLabel3.setText("Despesas:");

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel4.setText("Renda extra");

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel5.setText("Mesada");

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel6.setText("Frelancer");

        jLabel7.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel7.setText("Salário");

        jLabel8.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel8.setText("Alimentação");

        jLabel9.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel9.setText("Automóvel");

        jLabel10.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel10.setText("Saúde");

        jLabel11.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel11.setText("Lazer");

        jLabel12.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel12.setText("Investimento");

        jLabel13.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel13.setText("Outros");

        jLabel14.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel14.setText("Casa");

        jLabel15.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jLabel15.setText("Compras");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel15)
                    .addComponent(jLabel13)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11)
                    .addComponent(jLabel9)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addGap(4, 4, 4)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(36, 36, 36)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addContainerGap(103, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRecebidos, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRecebidos, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(196, 196, 196)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDespesas, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDespesas, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(176, 176, 176)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnTipos, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnTipos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSaldo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDespesas, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRecebidos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDespesas, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRecebidos, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 18, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastroActionPerformed

        Dados dados = new Dados();

        String nome = tfNome.getText().trim();
        String classificacao = tfClassificacao.getText().trim();
        String valorText = tfValor.getText().trim();

        if (nome.isEmpty() || classificacao.isEmpty() || valorText.isEmpty() || tfData.getText().trim().isEmpty() || tfDataCadastro.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, preencha todos os campos!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        dados.setNome(nome);
        dados.setClassificacao(classificacao);

        try {
            double valor = Double.parseDouble(valorText);
            dados.setValor(valor);

            DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd-MM-yyyy");
            LocalDate data = LocalDate.parse(tfData.getText(), formato);
            LocalDate dataCadastro = LocalDate.parse(tfDataCadastro.getText(), formato);

            dados.setData(data);
            dados.setDataCadastro(dataCadastro);

            // Insere os dados no banco usando o DAO
            Conexao conexao = new Conexao();
            DadosDAO dadosDAO = new DadosDAO(conexao);

            // Verifica se a conexão foi bem-sucedida
            if (conexao.getConexao() != null) {
                dadosDAO.inserir(dados);
                System.out.println("Dados inseridos com sucesso!");

                DefaultTableModel tbProdutos = (DefaultTableModel) tbprodutos.getModel();
                Object[] novaLinha = {
                    dados.getNome(),
                    dados.getClassificacao(),
                    dados.getValor(),
                    dados.getData().toString(),
                    dados.getDataCadastro().toString()
                };
                tbProdutos.addRow(novaLinha);
            } else {
                JOptionPane.showMessageDialog(this, "Falha na conexão com o banco de dados.", "Erro", JOptionPane.ERROR_MESSAGE);
            }

        } catch (DateTimeParseException e) {
            JOptionPane.showMessageDialog(this, "Erro ao converter a data: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Valor inválido: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (RuntimeException e) {
            JOptionPane.showMessageDialog(this, "Erro ao inserir dados: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnCadastroActionPerformed

    private void tfNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNomeActionPerformed
        // TODO add youndling code here:
    }//GEN-LAST:event_tfNomeActionPerformed

    private void tfValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfValorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfValorActionPerformed

    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarActionPerformed
        Conexao conexao = new Conexao();
        DadosDAO dadosDAO = new DadosDAO(conexao);
        int selectedRow = tbprodutos.getSelectedRow();

        if (selectedRow != -1) {
            // Supondo que o nome do produto está na primeira coluna da tabela
            String nomeProduto = (String) tbprodutos.getValueAt(selectedRow, 0);

            // Criar um objeto Dados com o nome do produto
            Dados dadosParaExcluir = new Dados();
            dadosParaExcluir.setNome(nomeProduto); // Altere aqui para definir o nome

            // Chamar o método apagar no DAO
            try {
                // Usando a instância do DAO para excluir o produto do banco de dados
                dadosDAO.apagar(dadosParaExcluir);

                // Remover a linha da tabela
                DefaultTableModel tbProdutos = (DefaultTableModel) tbprodutos.getModel();
                tbProdutos.removeRow(selectedRow);

                JOptionPane.showMessageDialog(null, "Produto excluído com sucesso!");
            } catch (RuntimeException e) {
                JOptionPane.showMessageDialog(null, "Erro ao excluir produto: " + e.getMessage());
            } finally {
                conexao.fecharConexao(); // Verifique se este método existe na sua classe Conexao
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhuma linha selecionada para remover.");
        }
    }//GEN-LAST:event_btnApagarActionPerformed

    private void tbprodutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbprodutosMouseClicked

        if (tbprodutos.getSelectedRow() != -1) {
            tfNome.setText(tbprodutos.getValueAt(tbprodutos.getSelectedRow(), 0).toString());
            tfClassificacao.setText(tbprodutos.getValueAt(tbprodutos.getSelectedRow(), 1).toString());
            tfValor.setText(tbprodutos.getValueAt(tbprodutos.getSelectedRow(), 2).toString());
            tfData.setText(tbprodutos.getValueAt(tbprodutos.getSelectedRow(), 3).toString());
            tfDataCadastro.setText(tbprodutos.getValueAt(tbprodutos.getSelectedRow(), 4).toString());
        }

    }//GEN-LAST:event_tbprodutosMouseClicked

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        int rowCount = tbprodutos.getRowCount(); // Obtém o número de linhas da tabela

        if (rowCount == 0) { // Verifica se a tabela está vazia
            JOptionPane.showMessageDialog(this, "Nenhum dado para salvar!", "Aviso", JOptionPane.WARNING_MESSAGE);
            return; // Sai do método se não houver dados para salvar
        }

        // Conexão com o banco de dados
        Conexao conexao = new Conexao();
        DadosDAO dadosDAO = new DadosDAO(conexao);

        // Verifica se a conexão foi bem-sucedida
        if (conexao.getConexao() != null) {
            try {
                // Percorre todas as linhas da tabela para salvar os dados
                for (int i = 0; i < rowCount; i++) {
                    Dados dados = new Dados();

                    // Obtém os valores das colunas da linha atual
                    String nome = (String) tbprodutos.getValueAt(i, 0);
                    String classificacao = (String) tbprodutos.getValueAt(i, 1);
                    double valor = (double) tbprodutos.getValueAt(i, 2);
                    LocalDate data = LocalDate.parse((String) tbprodutos.getValueAt(i, 3));
                    LocalDate dataCadastro = LocalDate.parse((String) tbprodutos.getValueAt(i, 4));

                    // Define os valores no objeto Dados
                    dados.setNome(nome);
                    dados.setClassificacao(classificacao);
                    dados.setValor(valor);
                    dados.setData(data);
                    dados.setDataCadastro(dataCadastro);

                    // Insere os dados no banco usando o DAO
                    dadosDAO.inserir(dados);
                }

                JOptionPane.showMessageDialog(this, "Dados salvos com sucesso!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao salvar os dados: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Falha na conexão com o banco de dados.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnTiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTiposActionPerformed


    }//GEN-LAST:event_btnTiposActionPerformed

    private void btnSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaldoActionPerformed

        double totalRecebidos = 0.0;
        double totalDespesas = 0.0;

        String[] categoriasRecebidos = {
            "Salário",
            "Renda extra",
            "Mesada",
            "Freelancer"
        };

        DefaultTableModel tbProdutos = (DefaultTableModel) tbprodutos.getModel();
        for (int i = 0; i < tbProdutos.getRowCount(); i++) {
            String classificacao = (String) tbProdutos.getValueAt(i, 1); // Coluna 1: Classificação
            String valorStr = (String) tbProdutos.getValueAt(i, 2); // Coluna 2: Valor

            for (String categoria : categoriasRecebidos) {
                if (classificacao.equalsIgnoreCase(categoria)) {
                    try {
                        double valor = Double.parseDouble(valorStr);
                        totalRecebidos += valor;
                    } catch (NumberFormatException e) {
                        System.out.println("Erro ao converter valor: " + valorStr);
                    }
                    break;
                }
            }
        }

        // Calcular totalDespesas
        String[] categoriasDespesas = {
            "Alimentação",
            "Automóvel",
            "Saúde",
            "Lazer",
            "Investimento",
            "Outros",
            "Compras",
            "Casa"
        };

        for (int i = 0; i < tbProdutos.getRowCount(); i++) {
            String classificacao = (String) tbProdutos.getValueAt(i, 1); // Coluna 1: Classificação
            String valorStr = (String) tbProdutos.getValueAt(i, 2); // Coluna 2: Valor

            for (String categoria : categoriasDespesas) {
                if (classificacao.equalsIgnoreCase(categoria)) {
                    try {
                        double valor = Double.parseDouble(valorStr);
                        totalDespesas += valor;
                    } catch (NumberFormatException e) {
                        System.out.println("Erro ao converter valor: " + valorStr);
                    }
                    break;
                }
            }
        }

        double saldoDisponivel = totalRecebidos - totalDespesas;

        lblSaldo.setText("R$ " + String.format("%.2f", saldoDisponivel));
    }//GEN-LAST:event_btnSaldoActionPerformed

    private void btnDespesasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDespesasActionPerformed

        DefaultTableModel tbProdutos = (DefaultTableModel) tbprodutos.getModel();
        double totalDespesas = 0.0;

        String[] categoriasDespesas = {
            "Alimentação",
            "Automóvel",
            "Saúde",
            "Bem estar",
            "Investimento",
            "Outros",
            "Compras",
            "Casa"
        };

        for (int i = 0; i < tbProdutos.getRowCount(); i++) {
            String classificacao = (String) tbProdutos.getValueAt(i, 1); // Coluna 1: Classificação
            String valorStr = (String) tbProdutos.getValueAt(i, 2); // Coluna 2: Valor

            for (String categoria : categoriasDespesas) {
                if (classificacao.equalsIgnoreCase(categoria)) {
                    try {
                        double valor = Double.parseDouble(valorStr);
                        totalDespesas += valor;
                    } catch (NumberFormatException e) {
                        System.out.println("Erro ao converter valor: " + valorStr);
                    }
                    break;
                }
            }
        }

        lblDespesas.setText(" R$ " + String.format("%.2f", totalDespesas));


    }//GEN-LAST:event_btnDespesasActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        if (tbprodutos.getSelectedRow() != -1) {
            int selectedRow = tbprodutos.getSelectedRow();

            String nome = tfNome.getText().trim();
            String classificacao = tfClassificacao.getText().trim();
            String valorText = tfValor.getText().trim();
            String dataText = tfData.getText().trim();
            String dataCadastroText = tfDataCadastro.getText().trim();

            // Verifica se todos os campos estão preenchidos
            if (nome.isEmpty() || classificacao.isEmpty() || valorText.isEmpty() || dataText.isEmpty() || dataCadastroText.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Por favor, preencha todos os campos!", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try {
            
                double valor = Double.parseDouble(valorText);
                DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd-MM-yyyy");
                LocalDate data = LocalDate.parse(dataText, formato);
                LocalDate dataCadastro = LocalDate.parse(dataCadastroText, formato);

                // Cria um objeto Dados e preenche os atributos
                Dados dados = new Dados();
                dados.setNome(nome);
                dados.setClassificacao(classificacao);
                dados.setValor(valor);
                dados.setData(data);
                dados.setDataCadastro(dataCadastro);

        
                int id = (int) tbprodutos.getValueAt(selectedRow, 0);
                dados.setId(id);

                // Atualiza o banco de dados
                Conexao conexao = new Conexao();
                DadosDAO dadosDAO = new DadosDAO(conexao);

                if (conexao.getConexao() != null) {
                    dadosDAO.atualizar(dados);
                    System.out.println("Dados atualizados com sucesso!");

                    // Atualiza a tabela com os novos valores
                    tbprodutos.setValueAt(nome, selectedRow, 1);
                    tbprodutos.setValueAt(classificacao, selectedRow, 2);
                    tbprodutos.setValueAt(valorText, selectedRow, 3);
                    tbprodutos.setValueAt(data.toString(), selectedRow, 4);
                    tbprodutos.setValueAt(dataCadastro.toString(), selectedRow, 5);

                } else {
                    JOptionPane.showMessageDialog(this, "Falha na conexão com o banco de dados.", "Erro", JOptionPane.ERROR_MESSAGE);
                }

            } catch (DateTimeParseException e) {
                JOptionPane.showMessageDialog(this, "Erro ao converter a data: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Valor inválido: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            } catch (RuntimeException e) {
                JOptionPane.showMessageDialog(this, "Erro ao atualizar dados: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um registro para atualizar.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void tfClassificacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfClassificacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfClassificacaoActionPerformed

    private void btnRecebidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecebidosActionPerformed
        DefaultTableModel tbProdutos = (DefaultTableModel) tbprodutos.getModel();
        double totalRecebidos = 0.0;

        String[] categoriasRecebidos = {
            "Salário",
            "Renda extra",
            "Mesada",
            "Frelancer"

        };

        for (int i = 0; i < tbProdutos.getRowCount(); i++) {
            String classificacao = (String) tbProdutos.getValueAt(i, 1); // Coluna 1: Classificação
            String valorStr = (String) tbProdutos.getValueAt(i, 2); // Coluna 2: Valor

            for (String categoria : categoriasRecebidos) {
                if (classificacao.equalsIgnoreCase(categoria)) {
                    try {
                        double valor = Double.parseDouble(valorStr);
                        totalRecebidos += valor;
                    } catch (NumberFormatException e) {
                        System.out.println("Erro ao converter valor: " + valorStr);
                    }
                    break;
                }
            }
        }

        lblRecebidos.setText(" R$ " + String.format("%.2f", totalRecebidos));        // TODO add your handling code here:
    }//GEN-LAST:event_btnRecebidosActionPerformed

    private void tfDataCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDataCadastroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDataCadastroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cadastro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApagar;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnCadastro;
    private javax.swing.JButton btnDespesas;
    private javax.swing.JButton btnGanho1;
    private javax.swing.JButton btnGastos;
    private javax.swing.JButton btnRecebidos;
    private javax.swing.JButton btnSaldo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnTipos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblClassificacao;
    private javax.swing.JLabel lblData1;
    private javax.swing.JLabel lblDataEntrada;
    private javax.swing.JLabel lblDespesas;
    private javax.swing.JLabel lblGanho;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblRecebidos;
    private javax.swing.JLabel lblSaldo;
    private javax.swing.JLabel lblValor;
    private javax.swing.JTable tbprodutos;
    private javax.swing.JTextField tfClassificacao;
    private javax.swing.JTextField tfData;
    private javax.swing.JTextField tfDataCadastro;
    private javax.swing.JTextField tfNome;
    private javax.swing.JTextField tfValor;
    // End of variables declaration//GEN-END:variables
}
